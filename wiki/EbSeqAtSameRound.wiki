#summary 同一拍中，战士动作先后顺序算法

eb 的设计在同一轮中仍然有动作先后关系。（树叶飘落，掠过，那一瞬，出手，飞刀略快100毫秒， 上官金虹死，李寻欢活）

也就是说虽然大家是同时出招， 但是先出手的胜。 不会有互砍，同时掉血的情况。当然如果后出手的没死， 那么一轮下来两人都掉了血，没差别。 只有砍死那一拍，会有差别。

而行走也是一样。 比如两人并排站着。  都要向左走一步。 如果左边那个先走，那么结果是大家都向左一步。  如果右边那个先走， 由于左边有人，因此失败。 然后左边的走一步。 他们中间就留下了一个空档。 右边那个原地没动。


这就是：EB 战场最好玩的地方。 所谓：*战场不确定性。和混乱性。*

在schema.hrl  代码中， 某人在 soldier.act_sequence 边上留下了个注释： （目前未理解其作用）， 这个特性今天我编程完成了。是EB最后实现的一个特性。

act_sequence 的用途是让指挥官控制同一拍中自己部队的这些武士前进的次序。 就可以解决刚才说的并排向左一步的问题。给左边那个act_sequence = 1，右边那个 = 2. EB 战场程序就会安排左边的先走，右边的后走。这样你就能够精确控制自己部队的行为。

*具体讲下EB 对于战场上同一节拍动作先后关系的判定算法。*

假设：

红方的sequenece 设置为 【8，8，6，4，8，3，3，9，3】

蓝方为 【0，1，9，4，0，3，1，9，3】

此时红方应该先走的是3个序号为3 的战士，  而蓝方有两个为0 的战士。   但并不代表蓝方会先走。 EB 会首先从红方3个3中随机取1个战士， 蓝方两个0 中取一个战士。 然后在这两个战士中随机抽一个先走。

假设抽了4轮，碰巧两边各消耗2个。 此时红方还剩1个3， 蓝方没有0了。 系统会找到蓝方第二优先级的 2个1 中抽一个， 继续和红方剩下那个3 继续去扔随机数

也就是说，sequence 是在自己队内排序的依据。 队之间完全碰运气决定谁先动。 运气不好会别人连出招几次，自己还没出。这就是EB 提供的战场偶然性。 当你偶然在某个位置多砍了别人几刀，是否能够乘势突破， 巩固这个有利因素，就是你算法的优劣程度了。

这里还有一个特点（我是在写这封信的时候想到的）；假设双方有3个战士已经面对面站着开砍了。 另外每方都有3个战士处于行走状态，未触敌。

此时假设红方的sequence 顺序是 【1，1，1，1，1，1】 ， 蓝方是【1，1，1，2，2，2】  （后面的3个是未触敌的）。按照算法红方在6个里选一个， 蓝方在3个里选一个。然后双方碰运气。由于双方碰运气的几率是一样的。因此：

红方能够发动砍人的几率是  3/6 /2  = 25%   

蓝方发动砍人的几率是 3/3/2 = 50% .   

也就是说蓝方先砍的机会要比红方高2倍！  红方的一半运气用到了无所谓的先走一步上去了，而不是用在关键的先砍一刀上。更进一步如果那三个开砍的战士中有一个已经就差一刀了。 那么精确的设【1，2，2，3，3，3】 就更重要了。 


呵呵，能理解吗？ 最好的办法是看程序，看了就明白了。